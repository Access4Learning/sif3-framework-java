=============================================================
Release Notes for v0.4.0 of SIF3 Framework (Month Day, 2014)
=============================================================

Bug Fixes
---------
- Fixed issue where mime type from the URL is not picked up correctly with RestEasy (JBoss JAX-RS). Regular expression was not
  processed correctly by RestEasy.
- Added better error reporting where consumer or provider classes did not implement some of the methods correctly.
- Added better error reporting where the DB connection pool could not be initialised (HibernateUtils.java). Also
  deal with this case better in the ProviderServletContext class that will now attempt to undeploy the application if
  the DB connection pool could not be established at start-up.

What has Changed
----------------
- Added JSON capability. This uses the Jettison library (jettison-1.3.3.jar). This library need to be added to your deployment.
- Removed SIF AU Datamodel generation and source code. This is now in a new GitHub project called SIF3DMGenerator 
  (https://github.com/nsip/SIF3DMGenerator-Java).
  This change ensures that the SIF3 Framework is independent form a data model. The SIF AU data model is now only a jar within the framework
  for testing purpose of some functionality.

Removed Artifacts
-----------------
- lib/json/ezmorph-1.0.6.jar, lib/json/json-lib-2.4-jdk15.jar, war/WEB-INF/lib/ezmorph-1.0.6.jar, war/WEB-INF/lib/json-lib-2.4-jdk15.jar
- sif3.common.utils.JSONUtil.java, sif3.infra.test.common.utils.TestJSONUtils.java, sif3.infra.test.common.conversion.TestInfraObjectEnum.java,
  sif3.infra.common.conversion.InfraObjectEnum.java
- systemic.sif3.demo.rest.ModelObjectConstantsUS.java, systemic.sif3.demo.rest.consumer.StudentsConsumer.java, sif3.infra.test.rest.consumer.StudentsUSConsumer
  sif.dd.au30.conversion.DataModelMarshalFactory.TestMarshallers
- All datamodel artifacts under Generator directory.  

Note:
All of the above fixes & changes do not affect any classes exposed to the developer. No code changes
will be required in your service implementations. Simply drop the latest framework libraries into
your project and all changes will be available without any other interactions by the developer.
