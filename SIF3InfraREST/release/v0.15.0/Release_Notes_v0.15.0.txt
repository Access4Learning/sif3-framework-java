==============================================================
Release Notes for v0.15.0 of SIF3 Framework (July 29, 2019)
==============================================================

Bug Fixes
---------
- None

New Functionality
-----------------
- Added initial support for Schema Version Negotiation functionality. See Developer's Guide section 2.4 for further details. This
  new functionality required minor changes to the Functional Service and Named Query interfaces. If your project uses any of these
  then your code will break as the changes are "breaking changes". However there is a simple fix that is further detailed in below
  sections. 

Changed Functionality
---------------------
- Updated framework to use SIF 3.3 Infrastructure namespace and data model.

Removed Artifacts/Functionality
-------------------------------
- None


==========================
-- Upgrade Instructions --
==========================

----------------------------
-- Infrastructure Upgrade --
----------------------------
Step 1: DB Upgrade
------------------
Due to the support for SIF 3.3 infrastructure there is a need to update some database content of the 
SIF3_SESSION table and the JOB related tables. There is a SQL script THAT MUST BE RUN first to fix data in the database. 
It will upgrade the namespace of all existing environment XML and/or job XML in these tables to SIF 3.3.
The script can be found in the directory <frameworkInstall>/DB/DDL/Datafix/current/v0.14.1-v0.15.0. Run the script
with the name Datafix20190612_<dbType>.sql. If you use a database other than the ones that have an update script
provided you should be able to derive your script based on one of the provided one's.

Step 2: Environment Template Upgrade
------------------------------------ 
The environment template XMLs need a fix as well. They should be in a directory called "environments/consumer/template"
and "environments/provider/template". Ensure that the following namespaces
- http://www.sifassociation.org/infrastructure/3.0.1 or 
- http://www.sifassociation.org/infrastructure/3.1 or 
- http://www.sifassociation.org/infrastructure/3.2.1 
are changed to http://www.sifassociation.org/infrastructure/3.3.

Step 3: Job Template Upgrade
---------------------------- 
The Job template XMLs need a fix as well. They should be in a directory called "environments/consumer/template/job"
and "environments/provider/template/job". Ensure that the following namespaces
- http://www.sifassociation.org/infrastructure/3.0.1 or 
- http://www.sifassociation.org/infrastructure/3.1 or 
- http://www.sifassociation.org/infrastructure/3.2.1 
are changed to http://www.sifassociation.org/infrastructure/3.3.


Upgrade your Project
--------------------
Once the above steps are done you can upgrade your project with the latest libraries of the framework as stated below:

Ant:
Drop the latest framework library into your project's lib directory/directories. 

Maven:
Use the latest maven dependency
<dependency>
   <groupId>sif3.framework</groupId>
   <artifactId>sif3-infra-rest</artifactId>
   <version>0.15.0</version>
</dependency>

Code Upgrade for changes to Functional Service and Named Query Interfaces
-------------------------------------------------------------------------
As part of the schema version negotiation functionality that has been added in this version of the framework some interfaces 
required one parameter to be changed. Affected interfaces are:
- FunctionalServiceConsumer
- FunctionalServiceProvider
- NamedQueryProvider

A number of methods in the above interfaces used to have a parameter called "MediaType returnMimeType". This has been changed to a 
parameter called "PayloadMetadata returnPayloadMetadata". If you have consumers or providers that extend the respective abstract 
class a compilation error will be shown.

Fix
---
To fix the above compilation error you need to do the following simple steps:
1) Replace the parameter with the name and type "MediaType returnMimeType" with "PayloadMetadata returnPayloadMetadata".
2) Where your code accessed the old parameter called "returnMimeType" you replace your code with "returnPayloadMetadata.getMimeType()".

The above two steps should remove the compilation errors.

Finally some methods of the mentioned interfaces return a structure that contains or extends a class called "StringPayload". This 
class used to have a property called "MediaType mimeType". This has been replaced with "PayloadMetadata payloadMetadata". 
As with the fix above you need to modify your code where you accessed "mimeType" with "payloadMetadata.getMimeType()" or 
"payloadMetadata.setMimeType()".


Data Model Upgrade
------------------
None.

3rd Party Library Update
------------------------
None.
