==============================================================
Release Notes for v0.10.0 of SIF3 Framework (MM DD, 2016)
==============================================================

Please note that as of this version the SIF3 Framework no longer uses Ant for the build process. It now uses
Maven that is superior when it comes to dependency management. Therefore if you wish to build the framework
yourself or need changes and want to rebuild it, you need either a Maven capable IDE or maven installed.
Please refer to the developer's guide for maven version information.

If you have the framework imported to your IDE and want to upgrade to the latest version it is suggested
that you perform the steps listed below. The directory structure has changed considerably and uses
maven conventions. Therefore it is best to completely re-import the project to your IDE:

1) Remove the current SIF3 Framework Project from your IDE. This not only includes the removal from the IDE
   but also physical removal of the SIF3 Framework directory and its sub-directory. If you made changes to
   the framework, make sure you make a backup first!
2) Now re-import the project as a Maven multi-module project into your IDE. Details for Eclispe are listed
   in the developer's guide under section "3.3.6.1 Eclipse Notes" Follow similar steps for other IDEs.

More details about the various maven modules can be found in the Developer's Guide in section 
"3.2. Framework Structure".

Bug Fixes
---------
- Fixed issue on provider with external security services and the environment resource class. External tokens are
  now dealt with correctly if a token is renewed with a different value.
- Provider reports proper error to consumer if navigationPage is <=0.
- Fixed issue where consumerInstanceId must be a int rather than a string when reading from Message Queues.

New Functionality
-----------------
- None 

Changed Functionality
---------------------
- Added new parameter called customResponseParams to ALL provider side interface methods, namely the Provider.java,
  QueryProvider.java and ChangesSinceProvider.java interfaces.
  THIS WILL BREAK YOUR CODE if you implement a provider.
  See Infrastructure Upgrade below section for more details.

Removed Artifacts/Functionality
-------------------------------
- None
- Dependency on the systemoc-framework_<date>.jar has been removed. Applicable classes of that library are now part of
  the SIF3 Framework.  

--------------------------
-- Upgrade Instructions --
--------------------------

----------------------------
-- Infrastructure Upgrade --
----------------------------
- Drop the latest framework library into your project's lib directory/directories.

==========================================================================================================================
Providers ONLY: Compilation Error due to new parameter in all provider interfaces methods.
--------------------------------------------------------------------------------------------------------------------------
Due to an additional parameters required in all methods of any provider style class you need to add a new parameter to all 
the methods that indicate a compile error. Please note only the additional parameter must be added to rectify the compile
error. You wont't need to do anything else.

Name & Type of Parameter: ResponseParameters customResponseParams

Add the above to all methods that throw an error after the upgrade. For example the method 'retrieve()' in any of your
classes that extend the BaseProvider or BaseEventProvider<L> will change from:

  public Object retrieve(SIFZone zone, 
                         SIFContext context, 
                         PagingInfo pagingInfo, 
                         RequestMetadata metadata) 
         throws PersistenceException, UnsupportedQueryException, DataTooLargeException
  {
    ...
  }

to
  public Object retrieve(SIFZone zone, 
                         SIFContext context, 
                         PagingInfo pagingInfo, 
                         RequestMetadata metadata, 
                         ResponseParameters customResponseParams) // <== NOTE NEW PARAMETER
          throws PersistenceException, UnsupportedQueryException, DataTooLargeException 
  {
    ...
  }

An identical change will be required to all methods from the QueryProvider and ChangesSinceProvider interfaces if your 
provider classes implement any of these two interfaces. If you wish to know more about this new parameter please refer
to the Developer's Guide in the appropriate section where the methods are documented.

==========================================================================================================================

------------------------
-- Data Model Upgrade --
------------------------
None.

------------------------------
-- 3rd Party Library Update --
------------------------------
None.
