#--------------------------------------------------------------------------------------#
#-- Properties relating to this Adapter: These are typical properties for a Provider --#
#--------------------------------------------------------------------------------------#

#
# General information about this adapter
#

# Valid values for adapter.type = consumer|provider
adapter.type=provider
adapter.id=StudentProvider

# Turn on (true) or off (false) ACL checks on provider. Default = true
adapter.checkACL=true

# Optional generator ID. Can be used as an identifier of the provider. This value is provided as a HTTP header field
# in each event that is sent to the broker. The broker will pass this HTTP header field on to the consumer as is.
#adapter.generator.id=sis-nsw

#------------------------------------------#
#-- Environment Related Property Section --#
#------------------------------------------#

#
# Type of environment this provider connects to. Can be BROKERED or DIRECT
#
env.type=DIRECT

#
# Indicate if the environment provider supports events. Some DIRECT environments won't support it. BROKERED environments should.
# Valid values are true and false. The default is false.
#
env.events.supported=false

#
# List of properties that are used independent of the environment type
#
env.mediaType=XML

#
# In a DIRECT environment the xml.file.name is not required. It is held in the SIF3_ENV_TEMPLATE table
# In a BROKERED environment the xml.file.name holds the solution ID, and some other basic stuff just like a consumer would.
#
#env.xml.file.name=devLocal.xml

# In a DIRECT environment the authentication.method is not required. It is held in the SIF3_APP_TEMPLATE table
# In a BROKERED environment the authentication method to be used to connect to broker.
# authentication.method can be: Basic or SIF_HMACSHA256 (case sensitive!!!)
#env.authentication.method=Basic

#
# In a DIRECT environment the application.key is not required. It is held in the SIF3_ENV_TEMPLATE table
# In a BROKERED environment the application.key is the identifier of the provider to the broker.
#
#env.application.key=TestSIS

#
# In a DIRECT environment the pwd is not required. It is held in the SIF3_ENV_TEMPLATE table
# In a BROKERED environment the pwd it the password of the provider to the broker.
#
#env.pwd=Password1

# Eclipse built in Tomcat and URIs.
env.connector.url=http://localhost:9080/SIF3InfraREST/sif3
env.connector.url.secure=https://localhost:9443/SIF3InfraREST/sif3

# Separate Tomcat Instance and URIs
#env.connector.url=http://localhost:8080/SIF3InfraREST/sif3
#env.connector.url.secure=https://localhost:8443/SIF3InfraREST/sif3


#---------------------------------------------------------------#
#-- Environment Properties used in Brokered Environments only --#
#---------------------------------------------------------------#

# Valid values for adapter.use.https = true|false
adapter.use.https=false

# Indicates if the environment shall be deleted if the adapter shuts down (true): USE WITH CARE! If environment is removed, all
# associated data is lost (queues, messages in queues, delayed responses etc). Should only be TRUE in direct environments without
# events and delayed I/O. 
adapter.deleteEnvironment.onShutdown=false

# Base URI to broker
env.baseURI=https://mybroker.com/systemicDemo/environments/environment


#-------------------------------------#
#-- Provider Assembly Setup Section --#
#-------------------------------------#
#The Base Package where all Provider Classes can be found
provider.basePackageName=systemic.sif3.demo.rest.provider

#Name of all Provider Classes that make up this Provider. This is a comma separated list
#provider.classes=StudentPersonalProvider,SchoolInfoProvider,DailyAttendanceProvider
provider.classes=StudentPersonalProvider,SchoolInfoProvider

# Each provider in the list above is started in their own thread. These threads are started with a little delay between them.
# The default is 10 seconds. The property below allows to override that value. The delay is in seconds.
provider.startup.delay=5

#------------------------------#
#-- Event related Properties --#
#------------------------------#

# Events are being sent at a given interval. The event frequency (in seconds) can be set at a top level with this property.
# If not further specified for an particular provider the this value is used. To turn off events then this property can be set
# to 0.
event.frequency=30

#
# Once a provider is started a delay might be required before events shall be published. This delay is set here in seconds. If not set or
# provided then the default will be 5 seconds. If a different delay is required for each provider then this property can be set for each
# provider individually by adding ".<providerName>" at the end of this property. I.e. event.startup.delay.StudentPersonalProvider=30
# This value is in seconds. If the value cannot be set to less than 5 seconds. If it is set to less then it will be defaulted to 5 secs.
#
event.startup.delay=5

#
# This property indicates what the maximum number of objects per SIF Event message should be. This value is defaulted to 10 if not set.
# It can be overridden programatically by an implementer if required. It can also be set at the provider level by adding ".<providerName>" 
# at the end of this property. I.e. event.maxObjects.StudentPersonalProvider=25
event.maxObjects=100

#
# If it is required to set the event frequency (in seconds) for a particular provider (name of provider.classes property)
# then this is set here. To turn off events for a particular provider then the frequency can be set to 0.
event.frequency.SchoolInfoProvider=45

#
# For Update Events the developer will have to set the UpdateType (FULL, PARTIAL) for events. This value here is just o indicate the
# expected default behaviour if the  update type is not set. It ensures that the framework always has a value to fall back to and make
# event messages valid. I no value is provided then it will assume "FULL". Valid values are FULL and PARTIAL (not case-sensitive).
event.default.updateType=FULL


#------------------------------------------------------------------------------------#
#-- Custom Properties: Define any properties you like for your implementation here --#
#------------------------------------------------------------------------------------#
#provider.student.file.location=C:/DEV/eclipseWorkspace/SIF3InfraREST/TestData/xml/input/StudentPersonals.xml
#provider.school.file.location=C:/DEV/eclipseWorkspace/SIF3InfraREST/TestData/xml/input/SchoolInfos.xml
provider.student.file.location=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/StudentPersonals.xml
provider.school.file.location=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/SchoolInfos.xml

# Custom property. Only used for my own testing.
provider.check.envType=false
provider.events.recycle=1

resource.testmode=true
#event.message.file=C:/DEV/eclipseWorkspace/SIF3InfraREST/TestData/xml/input/testEvents.log
event.message.file=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/testEvents.log
event.message.file=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/testEventsSPOnly.log
event.numUntilNoMsg=100

custom.events.dailyAtt.numSchools=5
custom.events.dailyAtt.numStudents=10
