<project name="SIF3InfraREST" basedir="." default="03-jar-components">

	<!-- ************************************************************************ -->
	<!-- The following tasks need to be imported to Eclipse. They can be found in -->
	<!-- ant-contrib.jar. (http://ant-contrib.sourceforge.net/)                   -->
	<!-- To run this build script from the command line the ant-contrib.jar must  -->
	<!-- be in the ant/lib directory.                                             -->
	<!-- ************************************************************************ -->

	<taskdef name="foreach" classname="net.sf.antcontrib.logic.ForEach" />

	<property name="project.basedir" value="${basedir}"/>

	<!-- *************************** -->
	<!-- Load default property files -->
	<!-- *************************** -->
	<property file="${project.basedir}/ant.properties"/>

	<!-- ********************* -->
	<!-- Environment Variables -->
	<!-- ********************* -->
	<property name="app.name" value="${app.name}" />
	<property name="build.dir" value="${project.basedir}/${build.dir}"/>
	<property name="web.dir.name" value="war"/>
	<property name="dist.dir" value="${build.dir}/dist"/>
	<property name="src.dir" value="src" />
	<property name="class.dir" value="${build.dir}/classes" />
	<!--property name="lib.root.dir" value="${project.basedir}/${web.dir.name}/WEB-INF/lib" /-->
    <property name="lib.root.dir" value="${project.basedir}/lib" />
	<property name="config.dir" value="${project.basedir}/config" />
    <property name="systemic.path" value="systemic" />
	<property name="verbose" value="true" />

	<path id="classpath">
		<fileset dir="${lib.root.dir}">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
		</fileset>
		<fileset dir="${servlet.lib.dir}">
			<include name="${servlet.lib}" />
		</fileset>
		<pathelement path="${class.dir}" />
	</path>

	<!-- Comma separated list of Source directories -->
	<property name="srcs" value="sif3InfraCommon,sif3InfraREST,sif3Datamodel,demo"/>
    <property name="jars" value="common,rest,dd,demo"/>

	<!-- print some varaibles -->
	<target name="00-env" description="Show Ant variables">
		<echo message="project.basedir: ${project.basedir}"/>
		<echo message="app.name: ${app.name}"/>
		<echo message="build.dir: ${build.dir}"/>
		<echo message="web.dir.name: ${web.dir.name}"/>
		<echo message="dist.dir: ${dist.dir}"/>
		<echo message="src.dir: ${src.dir}"/>
		<echo message="class.dir: ${class.dir}"/>
		<echo message="lib.root.dir: ${lib.root.dir}"/>
		<echo message="config.dir: ${config.dir}"/>
		<echo message="servlet.lib.dir: ${servlet.lib.dir}"/>
		<echo message="servlet.lib: ${servlet.lib}"/>
        <echo message="systemic.path: ${systemic.path}"/>
        <echo message="tomcat.install.dir: ${tomcat.install.dir}"/>
        <echo message="frameworkversion: ${frameworkversion}"/>
        <echo message="javaversion: ${javaversion}"/>
		<echo message="jarprefix: ${jarprefix}"/>
	</target>

	<!-- Check Dependencies -->
	<target name="01-check-dependencies" depends="02-clean, compile-all" description="Check Build Dependencies"/>

	<!-- Clean environment. -->
	<target name="02-clean" description="Deletes the build directory">
		<delete dir="${dist.dir}" />
		<delete dir="${class.dir}" />
	</target>

	<!-- ***************** -->
	<!-- Environment setup -->
	<!-- ***************** -->
	<target name="init">
		<mkdir dir="${class.dir}"/>
		<mkdir dir="${dist.dir}"/>
	</target>

	<!-- ******************************* -->
	<!-- Compile Targets for Environment -->
	<!-- ******************************* -->

	<!-- Main Compile Target -->
	<target name="compile-all" depends="init" description="Compile all sources">
		<foreach list="${srcs}" target="compile-src" param="elem" trim="true"/>
	</target>

	<target name="compile-src">
		<echo message="Compile: ${project.basedir}/${elem}/${src.dir}"/>

		<!-- Compile source -->
		<javac destdir="${class.dir}" debug="on">
			<classpath refid="classpath" />
			<src path="${project.basedir}/${elem}/${src.dir}" />
		</javac>

		<!-- copy all non-java files across -->
		<copy todir="${class.dir}">
			<fileset dir="${project.basedir}/${elem}/${src.dir}">
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
	</target>

	<!-- Main Jar Target -->
	<target name="03-jar-components" depends="compile-all" description="Create JAR files for all components">
		<foreach list="${jars}" target="jar-lib" param="elem" trim="true"/>
	</target>

	<target name="jar-lib">
		<echo message="Create Jar: ${jarprefix}${sifinfraversion}Infra-${elem}-${frameworkversion}.jar"/>
		<jar destfile="${dist.dir}/${jarprefix}${sifinfraversion}Infra-${elem}-${frameworkversion}.jar">
			<!-- Classes and resources -->
			<fileset dir="${class.dir}" includes="**/${elem}/**" excludes="**/readme.txt"/>
		</jar>
	</target>

	<target name="jar-config">
		<echo message="Jar: ${dist.dir}/config.jar"/>
<!--		
		<mkdir dir="${dist.dir}"/>
		<jar destfile="${dist.dir}/config.jar">
            <fileset dir="${config.dir}">
            	<include name="basicsis/spring/*"/>
            </fileset>
		</jar>
-->		
	</target>

	<!-- *************** -->
	<!-- Create WAR file -->
	<!-- *************** -->
	<target name="80-build-war" depends="03-jar-components, jar-config" description="Package WAR for distribution">
		<delete file="${dist.dir}/${app.name}.war}"/>

		<!-- get all jar files -->
		<copy todir="${lib.root.dir}">
			<fileset dir="${dist.dir}" includes="*.jar"/>
		</copy>

		<echo message="War Creation: ${project.basedir}/${web.dir.name}"/>
		<jar destfile="${dist.dir}/${app.name}.war">
			<fileset dir="${project.basedir}/${web.dir.name}">
				<exclude name="**/readme.txt"/>
				<exclude name=".*"/>
				<!-- ignore eclipse files -->
			</fileset>
		</jar>

		<!-- remove project jars from WEB-INF/lib again -->
		<foreach list="${srcs}" target="del-project-jar" param="elem" trim="true"/>
		<delete file="${lib.root.dir}/config.jar"/>
	</target>

	<!-- delete project Jar file from WEB-INF/lib -->
	<target name="del-project-jar">
		<delete file="${lib.root.dir}/${elem}.jar"/>
	</target>
	
    <!-- ********************** -->
    <!-- Deploy to local Tomcat -->
    <!-- ********************** -->
    <target name="85-deploy-to-Local-Tomcat" depends="80-build-war" description="Deploy War to Local Tomcat">
    	<copy file="${dist.dir}/${app.name}.war" todir="${tomcat.install.dir}/webapps"/>
    </target>
	
</project>
