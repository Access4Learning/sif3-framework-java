#--------------------------------------------------------------------------------------#
#-- Properties relating to this Adapter: These are typical properties for a Provider --#
#--------------------------------------------------------------------------------------#

#
# General information about this adapter
#

# Valid values for adapter.type = consumer|provider
adapter.type=provider
adapter.id=StudentProvider

# Turn on (true) or off (false) ACL checks on provider. Default = true
adapter.checkACL=true

# External security service shall be used if Bearer Token is used.
#adapter.security.service=

# Fully qualified name of the audit service implementation class to be used by this adapter. The class listed here must implement Auditor interface. If no
# class is listed then it is assumed that audit logging is not enabled.
#adapter.audit.service=systemic.sif3.demo.audit.LogAuditor
#adapter.audit.service=

# Demo of Hibernate Properties through 'injection'.
#adapter.hbr.propertyClass=systemic.sif3.demo.hibernate.DemoProperties

#
# The default authentication method to be used if no 'Authorization' HTTP Header is set but an accessToken is
# provided as an URL Query parameter.
# 
adapter.default.accessToken.authentication.method=SIF_HMACSHA256

# SIF xPress allows the authentication token to be provides on the URL with the access_token URL query parameter. This is not
# considered very secure and some implementations want to turn that option off. Setting this property to 'false' will disable
# this option. If it is set to 'true' then the access_token URL query parameter is accepted by this adapter.
# Default: false
adapter.authTokenOnURL.allowed=true

# Optional generator ID. Can be used as an identifier of the provider. This value is provided as a HTTP header field
# in each event that is sent to the broker. The broker will pass this HTTP header field on to the consumer as is.
#adapter.generator.id=sis-nsw

# Indicate if this adapter is capable and should use compression for when communicating with the broker (i.e. events).
# If this property is set to true then all payloads will be compressed (gzip) first before they are sent to the broker. 
# It will also indicate to the broker that it can accepts compressed payloads in the response. If not set then 'false' is 
# assumed (don't use compression).
adapter.compression.enabled=false

# If this property is set to true then no certificate checks are performed. SHOULD NOT BE USED in PROD or TEST environments.
# Its intend is to allow a quick and 'dirty' https connection with self-signed certificates where the certificate shall not be
# validated. Default: false. 
adapter.noCertificateCheck=false

# A set of custom HTTP Headers that are added to every response. If the name is one of the SIF 3.x pre-defined HTTP header names
# (i.e. timestamp, responseAction etc) then they will be overridden by the framework and the value in this list will be ignored. 
# The various headers are separated by '|' and the value of a header is listed after the ':'. If a HTTP Header shall have
# more than one value then they are listed as a comma separated list.
# 
# The exact EBNF notation is: <hdrName>:<value>{,<value>}{|<hdrName>:<value>{,<value>}}
#
# Example: Header1:value1,value2|Header2:value3|Header3:value4,value5
#
# If this property is not set then no custom headers will automatically be added to the response.
#adapter.custom.response.headers=joerg: hdr1, hdr2| test: abc | hdr3: 456, yuyu
adapter.custom.response.headers=

#------------------------------------------#
#-- Environment Related Property Section --#
#------------------------------------------#

#
# Type of environment this provider connects to. Can be BROKERED or DIRECT
#
env.type=DIRECT

#
# Indicate if the environment provider supports events. Some DIRECT environments won't support it. BROKERED environments should.
# Valid values are true and false. The default is false.
#
env.events.supported=false

#
# This property is only used in conjunction with external security services and to simplify consumer access. If
# it is set to TRUE and a consumer calls any methods (except environment related methods) then an environment
# is automatically created if it doesn't yet exist. This means no explicit call to the environment resource
# is required to create such an environment. The environment to be created is based on the security token 
# information that is retrieved from the external security service. Default value is false. FALSE indicates 
# that an environment shall not be created if it doesen't exist, which is the default behaviour of SIF.
#
# NOTE as of January 2015:
# This is a custom implementation that is not yet part of SIF 3.x but may be included in later releases.
# It may not be included, so usage of this feature must be taken with care as it might be removed again!
# 
env.allow.autoCreate=true

#
# List of properties that are used independent of the environment type
#
env.mediaType=JSON

# This property is used to set the real encoding used with the media type. The charset encoding value, if set, will be added
# to the media type of the accept and content-type http headers (i.e. application/xml; charset=UTF-8). If it is not set
# then no charset encoding will be added to the media type of the corresponding http headers.
env.mediaType.charset=UTF-8

#
# In a DIRECT environment the xml.file.name is not required. It is held in the SIF3_ENV_TEMPLATE table
# In a BROKERED environment the xml.file.name holds the solution ID, and some other basic stuff just like a consumer would.
#
#env.xml.file.name=devLocal.xml

# In a DIRECT environment the authentication.method is not required. It is held in the SIF3_APP_TEMPLATE table
# In a BROKERED environment the authentication method to be used to connect to broker.
# authentication.method can be: Basic or SIF_HMACSHA256 (case sensitive!!!)
#env.authentication.method=Basic

#
# In a DIRECT environment the application.key is not required. It is held in the SIF3_ENV_TEMPLATE table
# In a BROKERED environment the application.key is the identifier of the provider to the broker.
#
#env.application.key=TestSIS

#
# In a DIRECT environment the pwd is not required. It is held in the SIF3_ENV_TEMPLATE table
# In a BROKERED environment the pwd it the password of the provider to the broker.
#
#env.pwd=Password1

#
# This property indicates if a 'conflict' or HTTP Status of 409 for a create environment shall create an error payload (true) or if it shall 
# be considered a valid state (false). If it is considered a valid state then the payload of the response will hold an environment XML/JSON that
# caused the conflict and the HTTP Status of 409. The default is true (treat as error). 
#
env.create.conflictIsError=false

# Eclipse built in Tomcat and URIs.
env.connector.url=http://localhost:9080/SIF3InfraREST/sif3
env.connector.url.secure=https://localhost:9443/SIF3InfraREST/sif3

# Separate Tomcat Instance and URIs
#env.connector.url=http://localhost:8080/SIF3InfraREST/sif3
#env.connector.url.secure=https://localhost:8443/SIF3InfraREST/sif3

#---------------------------------------------------------------------------------------------------------#
# Schema negotiation properties. Only used from SIF 3.3 onwards - Refer to Versions_3-3.pdf specification
#---------------------------------------------------------------------------------------------------------#

# This property indicates if the headers for schema negotiation shall be included in each response. If it is 
# set to false then no schema negotiation headers as listed in SIF Infra 3.3 - Versions_3-3.pdf will be 
# included or considered. This makes the provider behave as in previous infrastructure versions. This is also 
# the default behaviour for backwards compatibility. If this property is set to true then the next few properties
# in this section starting with 'env.schema' need to be set as well.
env.schema.enabled=true

#
# Data model related properties
#

# The domain/local id for the data model schema used with this provider. 
# Typical values are (case-sensitive!): au, nz, uk, us
env.schema.dm.domain=au

# The data model version this provider supports. Eg. 3.4.5. Note this might need updating every time a new
# data model is used with the consumer.
env.schema.dm.version=3.4.5

# This property is only needed if JSON payloads are used (env.mediaType=JSON). As of SIF Infra 3.3 there are
# two JSON notations allowed. Goessner or PESC. Goessner was always supported and is the default if this property
# is not set. Valid values are (case-sensitive!): goessner, pesc
env.schema.dm.json.type=goessner

#
# Infrastructure related properties
#
# The infrastructure version this provider supports. Eg. 3.2.1. Note this might need updating every time a new
# infrastructure is used with the provider.
env.schema.infra.version=3.3

# This property is only needed if JSON payloads are used (env.mediaType=JSON). As of SIF Infra 3.3 there are
# two JSON notations allowed. Goessner or PESC. Goessner was always supported and is the default if this property
# is not set. Valid values are (case-sensitive!): goessner, pesc
env.schema.infra.json.type=goessner



#---------------------------------------------------------------#
#-- Environment Properties used in Brokered Environments only --#
#---------------------------------------------------------------#

# Valid values for adapter.use.https = true|false
adapter.use.https=false

# Indicates if the environment shall be deleted if the adapter shuts down (true): USE WITH CARE! If environment is removed, all
# associated data is lost (queues, messages in queues, delayed responses etc). Should only be TRUE in direct environments without
# events and delayed I/O. 
adapter.deleteEnvironment.onShutdown=false

# Base URI to broker
env.baseURI=https://mybroker.com/systemicDemo/environments/environment
#env.baseURI=http://localhost:9080/SIF3InfraREST/sif3/environments/environment


#-------------------------------------#
#-- Provider Assembly Setup Section --#
#-------------------------------------#
#The Base Package where all Provider Classes can be found
provider.basePackageName=systemic.sif3.demo.rest.provider

#Name of all Provider Classes that make up this Provider. This is a comma separated list
#provider.classes=StudentPersonalProvider,SchoolInfoProvider,DailyAttendanceProvider
#provider.classes=
provider.classes=StudentPersonalProvider, functional.RolloverStudentsProvider, namedquery.StudentsInYearProvider
#provider.classes=CSVStudentProvider
#provider.classes=StudentPersonalProvider,CSVStudentProvider

# Each provider in the list above is started in their own thread. These threads are started with a little delay between them.
# The default is 10 seconds. The property below allows to override that value. The delay is in seconds.
provider.startup.delay=5

#------------------------------#
#-- Event related Properties --#
#------------------------------#

# Events are being sent at a given interval. The event frequency (in seconds) can be set at a top level with this property.
# If not further specified for an particular provider the this value is used. To turn off events then this property can be set
# to 0.
event.frequency=30

#
# Once a provider is started a delay might be required before events shall be published. This delay is set here in seconds. If not set or
# provided then the default will be 5 seconds. If a different delay is required for each provider then this property can be set for each
# provider individually by adding ".<providerName>" at the end of this property. I.e. event.startup.delay.StudentPersonalProvider=30
# This value is in seconds. If the value cannot be set to less than 5 seconds. If it is set to less then it will be defaulted to 5 secs.
#
event.startup.delay=5

#
# This property indicates what the maximum number of objects per SIF Event message should be. This value is defaulted to 10 if not set.
# It can be overridden programatically by an implementer if required. It can also be set at the provider level by adding ".<providerName>" 
# at the end of this property. I.e. event.maxObjects.StudentPersonalProvider=25
event.maxObjects=100

#
# If it is required to set the event frequency (in seconds) for a particular provider (name of provider.classes property)
# then this is set here. To turn off events for a particular provider then the frequency can be set to 0.
event.frequency.SchoolInfoProvider=45

#
# For Update Events the developer will have to set the UpdateType (FULL, PARTIAL) for events. This value here is just o indicate the
# expected default behaviour if the  update type is not set. It ensures that the framework always has a value to fall back to and make
# event messages valid. I no value is provided then it will assume "FULL". Valid values are FULL and PARTIAL (not case-sensitive).
event.default.updateType=FULL

#-------------------------------------------#
#-- Functional Service related Properties --#
#-------------------------------------------#

#
# This property indicates if functional services are being used by this adapter. If it is set to false (default value) then no
# background processes will start (see job.housekeeping.cron property). If it is set to true then a number of housekeeping processes
# will be running from time to time. This includes eventing etc. It is important to turn this property on (true) if any functional
# services are used to ensure the correct working of the framework. For example if it is set to true then eventing and changes
# since are supported out of the box.
job.enabled=false

#
# This property can be set to disable any modifications to a job by the consumer. It simply lists (comma separated) the
# Job States that are considered an "end state". Once a job is in one of these end states it can no longer be altered by the consumer.
# If this property is not set then the following job states are considered end states: COMPLETED and FAILED. If this property is
# set to "NONE" then it is assumed that there is no end state which also means the consumer can always alter the job. 
job.endStates=

#
# This property indicates if events caused by a consumer operation shall be published to that consumer. If it is set to true
# then consumer caused events will be published. If set to false only events caused by provider operations will be published.
# This will be the default for most cases. If a specific behaviour is required for a particular functional service provider 
# then this property can be set for each provider individually by adding ".<serviceName>" at the end of this property. 
# I.e. job.event.includeConsumerRequested.RolloverStudents=true. The <serviceName> is the name of the service
# as defined by the functional Service URL and not the class name of the implementation class.
# Default: false 
job.event.includeConsumerRequested=false

# This property lists a number of zone|context for which a functional service event must be published, regardless
# of the originator (consumer) who created the job. Generally events are only sent to the originator of the job but the
# SIF3.x specification also allows events to be sent to specific other consumers that have the permission to get job events.
# These are generally "auditing" zones that needs to capture all job activities. This property can specify to which 
# additional zone|context a job event is sent. Because it is possible that there are more than one auditing style zones
# this porperty allows for a comma separated list of zone|contexts. Further if a specific behaviour is required for a 
# particular functional service provider then this property can be set for each provider individually by adding \
# ".<serviceName>" at the end of this property. I.e. job.event.auditZones.RolloverStudents=abc|DEFAULT. The <serviceName> 
# is the name of the service as defined by the functional Service URL and not the class name of the implementation class.
#
# The exact EBNF notation is: <zoneId>[|<contextId>]{,<zoneId>[|<contextId>]}
#
# If the contextId is not given then DEFAULT is assumed.

# Example: zoneABC|contextXYZ,zoneEFG
# For the above example the job events will all be sent to zone 'zoneABC' with context 'contextXYZ' and zone 'zoneEFG' and
# context 'DEFAULT' (note that context is not set for second zone so the DEFAULT context is used. 
#
job.event.auditZones=

#
# If eventing is enabled then job related events, which are maintained within the framework, will be published at the frequency (in
# seconds) given in this property. If not set then the default of 15 minutes is used (900 seconds). To turn off job events then 
# this property can be set to 0. If a different frequency is required for each provider then this property can be set for each
# provider individually by adding ".<serviceName>" at the end of this property. I.e. job.event.frequency.RolloverStudents=600.
# The <serviceName> is the name of the service as defined by the functional Service URL and not the class name of the 
# implementation class.
# Default: 900 (15 minutes)
job.event.frequency=300

#
# Once a provider is started a delay might be required before events shall be published. This delay is set here in seconds. If not set or
# provided then the default will be 5 seconds. If a different delay is required for each provider then this property can be set for each
# provider individually by adding ".<serviceName>" at the end of this property. I.e. job.event.startup.delay.RolloverStudents=30.
# The <serviceName> is the name of the service as defined by the functional Service URL and not the class name of the 
# implementation class.
# This value is in seconds. If the value cannot be set to less than 5 seconds. If it is set to less then it will be defaulted to 5 secs.
#
job.event.startup.delay=5

#
# This property indicates what the maximum number of job objects per SIF Event message should be. This value is defaulted to 10 if not set.
# It can be overridden programatically by an implementer if required. It can also be set at the provider level by adding ".<serviceName>" 
# at the end of this property. I.e. job.event.maxObjects.RolloverStudents=25 The <serviceName> is the name of the service as 
# defined by the functional Service URL and not the class name of the implementation class.
# Default: 10
job.event.maxObjects=3

#
# Internally the framework keeps a change log for jobs, so that either events can be published or "changes since" can be supported.
# This property indicates how far back in days the change log shall be kept. Any changes older than that will be cleaned up regularly
# at intervals an times set in the job.housekeeping.trigger property. Default used, if property is not set, is 30 days.
job.changelog.keep.days=45

#
# Internally the framework maintains some job information. Some jobs may have been unchanged for a long period of time and can
# be considered "stale". This property indicates what a stale job means in terms for days where no activity was recorded. The
# framework will remove these "unchanged" jobs after the number of days indicated with this property.
# Note: Jobs may also have an expire date. This property does not relate to such date. Expired Jobs will be removed by the framework
# regardless of this property. This property is only used for jobs that don't have an expire date but haven't been changed for the
# given number of days. Default is 30 days.
job.stale.keep.days=45

#
# The framework uses a Quartz Cron job to regularly perform some house keeping tasks on functional services jobs such as remove 
# old entries from the change log (see job.changelog.keep.days property) and/or removing old expired jobs from the job table.
# This property uses the standard Quartz Cron job notation to indicate when and how often the housekeeping job shall run. If not set
# it will default to "Once a Day at 2am" which equates to "0 0 2 * * ?" as a cron job notation.
job.housekeeping.cron=0 0 3 * * ?
#job.housekeeping.cron=0/20 * * * * ?

#------------------------------------------------------------------------------------#
#-- Custom Properties: Define any properties you like for your implementation here --#
#------------------------------------------------------------------------------------#
#provider.student.file.location=C:/DEV/eclipseWorkspace/SIF3InfraREST/TestData/xml/input/StudentPersonals.xml
#provider.school.file.location=C:/DEV/eclipseWorkspace/SIF3InfraREST/TestData/xml/input/SchoolInfos.xml
#provider.teachinggroup.file.location=C:/DEV/eclipseWorkspace/SIF3InfraREST/TestData/xml/input/TeachingGroups.xml
#provider.student.file.location=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/StudentPersonalsLarge.xml
provider.student.file.location=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/StudentPersonals.xml
provider.school.file.location=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/SchoolInfos.xml
provider.teachinggroup.file.location=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/TeachingGroups.xml

# Custom property. Only used for my own testing.
provider.check.envType=false
provider.events.recycle=1

resource.testmode=true
#event.message.file=C:/DEV/eclipseWorkspace/SIF3InfraREST/TestData/xml/input/testEvents.log
#event.message.file=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/testEvents.log
event.message.file=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/testEventsSPOnly.log
#event.message.file=C:/Development/GitHubRepositories/SIF3InfraRest/SIF3InfraREST/TestData/xml/input/CSVEvent.log
#event.numUntilNoMsg=100
event.numUntilNoMsg=1

custom.events.dailyAtt.numSchools=5
custom.events.dailyAtt.numStudents=10
